version: "3.8"
services:
  # mysql:
  #   image: mysql:8.0
  #   container_name: mysql_con
  #   restart: always
  #   command: mysqld --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
  #   ports:
  #     - "3306:3306"
  #   environment:
  #     MYSQL_ROOT_PASSWORD: root1234
  #     MYSQL_DATABASE: shopdevgo
  #     MYSQL_USER: levanhieu
  #     MYSQL_PASSWORD: levanhieu1234
  #     MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
  #   volumes:
  #     - mysql_data:/var/lib/mysql
  #     - ./init:/docker-entrypoint-initdb.d
  #   networks:
  #     - app-network

  mysql:
    container_name: mysql_con
    image: mysql:8.0
    restart: always

    command: mysqld --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    environment:
      MYSQL_ROOT_PASSWORD: 123abc
      MYSQL_DATABASE: shopdev
      #      MYSQL_USER: sandbox_user
      #      MYSQL_PASSWORD: passpass
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    ports:
      - "33060:3306"
    volumes:
      - "./docker/db/data:/var/lib/mysql"
      - "./docker/db/my.cnf:/etc/mysql/my.cnf"
      - "./docker/db/sql:/docker-entrypoint-initdb.d"
    networks:
      - app-network

  redis:
    image: redis:7.0
    container_name: redis_con
    ports:
      - "16379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network

volumes:
  mysql_data:
  redis_data:

networks:
  app-network:
    driver: bridge
