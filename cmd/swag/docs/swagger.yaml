basePath: /v1/2024
definitions:
  model.LoginInput:
    properties:
      user_account:
        type: string
      user_password:
        type: string
    type: object
  model.RegisterInput:
    properties:
      verify_key:
        type: string
      verify_purpose:
        type: string
      verify_type:
        type: integer
    type: object
  model.SetupTwoFactorAuthInput:
    properties:
      two_factor_auth_type:
        type: string
      two_factor_email:
        type: string
      user_id:
        type: integer
    type: object
  model.UpdateUserPasswordInput:
    properties:
      user_password:
        type: string
      user_token:
        type: string
    type: object
  model.VerifyInput:
    properties:
      verify_code:
        type: string
      verify_key:
        type: string
    type: object
  response.ErrorResponseData:
    properties:
      code:
        type: integer
      detail: {}
      error:
        type: string
    type: object
  response.ResponseData:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8001
info:
  contact:
    email: support@swagger.io
    name: TEAM TIP GO
    url: github.com/LeVanHieu0509/go-backend-api
  description: This is a sample server caller server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: github.com/LeVanHieu0509/go-backend-api
  title: Swagger Example API
  version: "1.0"
paths:
  /user/login:
    post:
      consumes:
      - application/json
      description: get user login
      parameters:
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/model.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponseData'
      summary: User Login
      tags:
      - User Login
  /user/register:
    post:
      consumes:
      - application/json
      description: get user register
      parameters:
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/model.RegisterInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponseData'
      summary: Show an account
      tags:
      - User Registration
  /user/two-factor/setup:
    post:
      consumes:
      - application/json
      description: Setup Two Factor Authentication
      parameters:
      - description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/model.SetupTwoFactorAuthInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponseData'
      summary: Setup Two Factor Authentication
      tags:
      - account 2fa
  /user/update_pass_register:
    post:
      consumes:
      - application/json
      description: user UpdatePasswordRegister
      parameters:
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/model.UpdateUserPasswordInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponseData'
      summary: Show an account
      tags:
      - User UpdatePasswordRegister
  /user/verify_account:
    post:
      consumes:
      - application/json
      description: user VerifyOTP
      parameters:
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/model.VerifyInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponseData'
      summary: Show an account
      tags:
      - User VerifyOTP
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
